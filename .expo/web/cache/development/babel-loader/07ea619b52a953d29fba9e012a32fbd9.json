{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\nimport { signOut } from 'firebase/auth';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(_ref) {\n  var _auth$currentUser2, _auth$currentUser3, _auth$currentUser4;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var signOutNow = function signOutNow() {\n    signOut(auth).then(function () {\n      navigation.replace('Login');\n    }).catch(function (error) {});\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        var _auth$currentUser;\n\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(Avatar, {\n            rounded: true,\n            source: {\n              uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n            }\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: signOutNow,\n          children: _jsx(Text, {\n            children: \"logout\"\n          })\n        });\n      }\n    });\n  }, [navigation]);\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'Hello developer',\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }]);\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  return _jsx(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email,\n      name: auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.displayName,\n      avatar: auth == null ? void 0 : (_auth$currentUser4 = auth.currentUser) == null ? void 0 : _auth$currentUser4.photoURL\n    }\n  });\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/tusha/OneDrive/Desktop/chatApp/chat-app/screens/Chat.js"],"names":["useEffect","useCallback","useState","useLayoutEffect","Avatar","auth","db","signOut","GiftedChat","Chat","navigation","messages","setMessages","signOutNow","then","replace","catch","error","setOptions","headerLeft","marginLeft","uri","currentUser","photoURL","headerRight","marginRight","_id","text","createdAt","Date","user","name","avatar","onSend","previousMessages","append","email","displayName"],"mappings":"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","sourcesContent":["import { useEffect, useCallback, useState, useLayoutEffect } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { auth, db } from '../firebase';\r\nimport { signOut } from 'firebase/auth';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\n\r\nconst Chat = ({ navigation }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const signOutNow = () => {\r\n        signOut(auth).then(() => {\r\n            // Sign-out successful.\r\n            navigation.replace('Login');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n    }\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerLeft: () => (\r\n                <View style={{ marginLeft: 20 }}>\r\n                    <Avatar\r\n                        rounded\r\n                        source={{\r\n                            uri: auth?.currentUser?.photoURL,\r\n                        }}\r\n                    />\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <TouchableOpacity style={{\r\n                    marginRight: 10\r\n                }}\r\n                    onPress={signOutNow}\r\n                >\r\n                    <Text>logout</Text>\r\n                </TouchableOpacity>\r\n            )\r\n        })\r\n    }, [navigation]);\r\n\r\n    useEffect(() => {\r\n        setMessages([\r\n            {\r\n                _id: 1,\r\n                text: 'Hello developer',\r\n                createdAt: new Date(),\r\n                user: {\r\n                    _id: 2,\r\n                    name: 'React Native',\r\n                    avatar: 'https://placeimg.com/140/140/any',\r\n                },\r\n            },\r\n        ])\r\n    }, []);\r\n    const onSend = useCallback((messages = []) => {\r\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n    }, []);\r\n    return (\r\n        <GiftedChat\r\n            messages={messages}\r\n            showAvatarForEveryMessage={true}\r\n            onSend={messages => onSend(messages)}\r\n            user={{\r\n                _id: auth?.currentUser?.email,\r\n                name: auth?.currentUser?.displayName,\r\n                avatar: auth?.currentUser?.photoURL\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}