{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\nimport { signOut } from 'firebase/auth';\nimport { collection, addDoc, getDocs, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(_ref) {\n  var _auth$currentUser2, _auth$currentUser3, _auth$currentUser4;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var signOutNow = function signOutNow() {\n    signOut(auth).then(function () {\n      navigation.replace('Login');\n    }).catch(function (error) {});\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        var _auth$currentUser;\n\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(Avatar, {\n            rounded: true,\n            source: {\n              uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n            }\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: signOutNow,\n          children: _jsx(Text, {\n            children: \"logout\"\n          })\n        });\n      }\n    });\n    var q = query(collection(db, 'chats'), orderBy('createdAt', 'desc'));\n    var unsubscribe = onSnapshot(q, function (snapshot) {\n      return setMessages(snapshot.docs.map(function (doc) {\n        return {\n          _id: doc.data()._id,\n          createdAt: doc.data().createdAt.toDate(),\n          text: doc.data().text,\n          user: doc.data().user\n        };\n      }));\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, [navigation]);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var _messages$ = messages[0],\n        _id = _messages$._id,\n        createdAt = _messages$.createdAt,\n        text = _messages$.text,\n        user = _messages$.user;\n    addDoc(collection(db, 'chats'), {\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n\n  return _jsx(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email,\n      name: auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.displayName,\n      avatar: auth == null ? void 0 : (_auth$currentUser4 = auth.currentUser) == null ? void 0 : _auth$currentUser4.photoURL\n    }\n  });\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/tusha/OneDrive/Desktop/chatApp/chat-app/screens/Chat.js"],"names":["React","useCallback","useState","useLayoutEffect","Avatar","auth","db","signOut","collection","addDoc","getDocs","query","orderBy","onSnapshot","GiftedChat","Chat","navigation","messages","setMessages","signOutNow","then","replace","catch","error","setOptions","headerLeft","marginLeft","uri","currentUser","photoURL","headerRight","marginRight","q","unsubscribe","snapshot","docs","map","doc","_id","data","createdAt","toDate","text","user","onSend","email","name","displayName","avatar"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useLayoutEffect } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { auth, db } from '../firebase';\r\nimport { signOut } from 'firebase/auth';\r\nimport { collection, addDoc, getDocs, query, orderBy, onSnapshot } from 'firebase/firestore';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\n\r\nconst Chat = ({ navigation }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const signOutNow = () => {\r\n        signOut(auth).then(() => {\r\n            // Sign-out successful.\r\n            navigation.replace('Login');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n    }\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerLeft: () => (\r\n                <View style={{ marginLeft: 20 }}>\r\n                    <Avatar\r\n                        rounded\r\n                        source={{\r\n                            uri: auth?.currentUser?.photoURL,\r\n                        }}\r\n                    />\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <TouchableOpacity style={{\r\n                    marginRight: 10\r\n                }}\r\n                    onPress={signOutNow}\r\n                >\r\n                    <Text>logout</Text>\r\n                </TouchableOpacity>\r\n            )\r\n        })\r\n\r\n        const q = query(collection(db, 'chats'), orderBy('createdAt', 'desc'));\r\n        const unsubscribe = onSnapshot(q, (snapshot) => setMessages(\r\n            snapshot.docs.map(doc => ({\r\n                _id: doc.data()._id,\r\n                createdAt: doc.data().createdAt.toDate(),\r\n                text: doc.data().text,\r\n                user: doc.data().user,\r\n            }))\r\n        ));\r\n\r\n        return () => {\r\n          unsubscribe();\r\n        };\r\n\r\n    }, [navigation]);\r\n\r\n    const onSend = useCallback((messages = []) => {\r\n        const { _id, createdAt, text, user,} = messages[0]\r\n\r\n        addDoc(collection(db, 'chats'), { _id, createdAt,  text, user });\r\n    }, []);\r\n\r\n    return (\r\n        <GiftedChat\r\n            messages={messages}\r\n            showAvatarForEveryMessage={true}\r\n            onSend={messages => onSend(messages)}\r\n            user={{\r\n                _id: auth?.currentUser?.email,\r\n                name: auth?.currentUser?.displayName,\r\n                avatar: auth?.currentUser?.photoURL\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}