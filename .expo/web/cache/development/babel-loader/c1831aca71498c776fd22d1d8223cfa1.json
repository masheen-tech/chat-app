{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from 'react-native-elements';\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var openRegisterScreen = function openRegisterScreen() {\n    navigation.navigate('Register');\n  };\n\n  var handleLogin = function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            signInWithEmailAndPassword(auth, email, password).then(function (res) {\n              return console.log(\"--res--\", res);\n            }).catch(function (err) {\n              return console.log(\"--err--\", err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Input, {\n      placeholder: \"Enter your email/username\",\n      label: \"Email/Username\",\n      leftIcon: {\n        type: 'material',\n        name: 'email'\n      },\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Enter your password\",\n      label: \"Password\",\n      leftIcon: {\n        type: 'material',\n        name: 'lock'\n      },\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"sign in\",\n      style: styles.button,\n      onPress: function onPress() {\n        return handleLogin();\n      }\n    }), _jsx(Button, {\n      title: \"register\",\n      style: styles.button,\n      onPress: function onPress() {\n        return handleLogin();\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 10,\n    marginTop: 100\n  },\n  button: {\n    width: 370,\n    marginTop: 10\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/tusha/OneDrive/Desktop/chatApp/chat-app/screens/login/index.js"],"names":["signInWithEmailAndPassword","React","useState","Input","Button","auth","Login","navigation","email","setEmail","password","setPassword","openRegisterScreen","navigate","handleLogin","then","res","console","log","catch","err","styles","container","type","name","text","button","StyleSheet","create","flex","alignItems","padding","marginTop","width"],"mappings":";;AAAA,SAASA,0BAAT,QAA2C,eAA3C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,SAASC,IAAT;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAE9B,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BL,IAAAA,UAAU,CAACM,QAAX,CAAoB,UAApB;AACD,GAFD;;AAMA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClBd,YAAAA,0BAA0B,CAACK,IAAD,EAAOG,KAAP,EAAcE,QAAd,CAA1B,CACGK,IADH,CACQ,UAAAC,GAAG;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CAAJ;AAAA,aADX,EAEGG,KAFH,CAES,UAAAC,GAAG;AAAA,qBAAIH,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB,CAAJ;AAAA,aAFZ;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAMA,SACE,MAAC,IAAD;AAAO,IAAA,KAAK,EAAEC,MAAM,CAACC,SAArB;AAAA,eACE,KAAC,KAAD;AACE,MAAA,WAAW,EAAC,2BADd;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAHZ;AAIE,MAAA,KAAK,EAAEhB,KAJT;AAKE,MAAA,YAAY,EAAE,sBAAAiB,IAAI;AAAA,eAAIhB,QAAQ,CAACgB,IAAD,CAAZ;AAAA;AALpB,MADF,EAQE,KAAC,KAAD;AACE,MAAA,WAAW,EAAC,qBADd;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,QAAQ,EAAE;AAAEF,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAHZ;AAIE,MAAA,KAAK,EAAEd,QAJT;AAKE,MAAA,YAAY,EAAE,sBAAAe,IAAI;AAAA,eAAId,WAAW,CAACc,IAAD,CAAf;AAAA,OALpB;AAME,MAAA,eAAe;AANjB,MARF,EAgBE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAEJ,MAAM,CAACK,MAAtC;AAA8C,MAAA,OAAO,EAAE;AAAA,eAAMZ,WAAW,EAAjB;AAAA;AAAvD,MAhBF,EAiBE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,KAAK,EAAEO,MAAM,CAACK,MAAvC;AAA+C,MAAA,OAAO,EAAE;AAAA,eAAMZ,WAAW,EAAjB;AAAA;AAAxD,MAjBF;AAAA,IADF;AAqBD,CAtCD;;AAwCA,IAAMO,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,OAAO,EAAE,EAHA;AAITC,IAAAA,SAAS,EAAE;AAJF,GADoB;AAO/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,KAAK,EAAE,GADD;AAEND,IAAAA,SAAS,EAAE;AAFL;AAPuB,CAAlB,CAAf;AAaA,eAAe1B,KAAf","sourcesContent":["import { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Input, Button } from 'react-native-elements';\r\nimport { auth } from \"../../firebase\";\r\n\r\nconst Login = ({navigation}) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const openRegisterScreen = () => {\r\n    navigation.navigate('Register');\r\n  };\r\n  \r\n\r\n\r\n  const handleLogin = async () => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(res => console.log(\"--res--\", res))\r\n      .catch(err => console.log(\"--err--\", err));\r\n  };\r\n\r\n  return (\r\n    <View  style={styles.container}>\r\n      <Input\r\n        placeholder='Enter your email/username'\r\n        label='Email/Username'\r\n        leftIcon={{ type: 'material', name: 'email'}}\r\n        value={email}\r\n        onChangeText={text => setEmail(text)}\r\n      />\r\n      <Input\r\n        placeholder='Enter your password'\r\n        label='Password'\r\n        leftIcon={{ type: 'material', name: 'lock'}}\r\n        value={password}\r\n        onChangeText={text => setPassword(text)}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"sign in\" style={styles.button} onPress={() => handleLogin()} />\r\n      <Button title=\"register\" style={styles.button} onPress={() => handleLogin()}/>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    marginTop: 100,\r\n  },\r\n  button: {\r\n    width: 370,\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}